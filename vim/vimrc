"[1 Plugins will be downloaded under the specified directory.
call plug#begin('~/.vim/plugins')

" Declare the list of plugins.
Plug 'tpope/vim-sensible'
Plug 'drewtempelmeyer/palenight.vim'
Plug 'itchyny/lightline.vim'
Plug 'scrooloose/nerdcommenter'
Plug 'ervandew/supertab'
Plug 'airblade/vim-gitgutter'
Plug 'pangloss/vim-javascript'
Plug 'scrooloose/nerdtree'
Plug 'ctrlpvim/ctrlp.vim'
Plug 'prettier/vim-prettier', { 'do': 'yarn install --frozen-lockfile --production' }

" List ends here. Plugins become visible to Vim after this call.
call plug#end()

" 256 color support
set t_Co=256

" jk is escape
inoremap jk <esc>

" leader key
let mapleader=" "

" <C-s> reloads the vimrc
map <leader>s :source ~/.vimrc<CR>

" <C-n> is nerdtree
nmap <Leader>n :NERDTreeToggle<CR>

" Saving :Q = :q
:command Q q

" Fuzzy search w/ ack
if executable('ag')
  " Use Ag over Grep
  set grepprg=ag\ --nogroup\ --nocolor
  let g:ctrlp_user_command = 'ag %s -l --nocolor -g ""'
endif

" Splits open order
set splitbelow
set splitright

" More split settings
nnoremap <Leader>j <C-W><C-J>
nnoremap <Leader>k <C-W><C-K>
nnoremap <Leader>l <C-W><C-L>
nnoremap <Leader>h <C-W><C-H>

" coloring and background
syntax on
set cursorline
set background=dark

" color scheme
colorscheme palenight
let g:lightline = {'colorscheme': 'palenight'}

" font
set guifont=FiraCode\ 12

" add colored column to avoid typing too far right
set colorcolumn=110
set textwidth=110

" add line numbers
set number
set relativenumber

" pasting w/o extra space
set pastetoggle=<C-p>

" Clipboard
map <C-c> :.w !pbcopy<CR><CR>
map <C-v> :r !pbpaste<CR>

" keep more in memory
set hidden
set history=100

" indentation settings
filetype indent on
set nowrap
set tabstop=4
set softtabstop=0
set shiftwidth=4
set expandtab
set autoindent
set smartindent

autocmd FileType python :setlocal shiftwidth=4
autocmd FileType python :setlocal tabstop=4
autocmd FileType json,javascript :setlocal shiftwidth=2
autocmd FileType json,javascript :setlocal tabstop=2

" remove white space on save
autocmd BufWritePre * :%s/\s\+$//e

" highlight search results
set hlsearch

" Get rid of bell
set visualbell

" use esc to cancel a search
" nnoremap <silent> <Esc> :nohlsearch<Bar>:echo<CR>

" use leader-leader to switch between prev document
" nnoremap <Leader><Leader> :e#<CR>

" show matching parentheses
set showmatch

" disable arrows
noremap! <Up> <Nop>
noremap! <Down> <Nop>
noremap! <Left> <Nop>
noremap! <Right> <Nop>
noremap <Up> <Nop>
noremap <Down> <Nop>
noremap <Left> <Nop>
noremap <Right> <Nop>

" search settings
set ignorecase
set smartcase
set incsearch

" command-t additional commands
" noremap <Leader>r :CommandTFlush<CR>
set wildignore+=*.log,*.sql,*.cache
set wildmode=longest,list,full
set wildmenu

set completeopt=longest,menuone

" nerdcomments settings
" Add spaces after comment delimiters by default
let g:NERDSpaceDelims = 1

" Use compact syntax for prettified multi-line comments
let g:NERDCompactSexyComs = 1

" NERDTree keymap
noremap <Leader>d :NERDTree<CR>
let NERDTreeMapActivateNode='<right>'
let NERDTreeShowHidden=1
let NERDTreeIgnore=['\.DS_Store', '\~$', '\.swp']

" Git Gutter settings
let g:gitgutter_sign_column_always=1

